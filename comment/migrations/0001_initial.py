# Generated by Django 5.0.6 on 2024-06-07 19:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_id', models.CharField(max_length=100)),
                ('property_address', models.CharField(max_length=250)),
                ('text', models.CharField(max_length=999)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
            ],
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.comment')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=999)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.comment')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
            ],
        ),
        migrations.CreateModel(
            name='ReplyLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
                ('reply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.reply')),
            ],
        ),
        migrations.CreateModel(
            name='ReportForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(choices=[('Comment', 'Comment'), ('Reply', 'Reply')], max_length=10)),
                ('object_id', models.IntegerField()),
                ('reported_text', models.CharField(max_length=999)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('cause', models.CharField(choices=[('Spam', 'Spam'), ('Harrassment', 'Harrassment'), ('Threatening Violence', 'Threatening Violence'), ('Hate Speech', 'Hate Speech'), ('Impersonation', 'Impersonation'), ('Prohibited Transaction', 'Prohibited Transaction'), ('Other', 'Other')], max_length=40)),
                ('resolved', models.BooleanField(default=False)),
                ('action', models.CharField(blank=True, choices=[('Delete', 'Delete'), ('Ignore', 'Ignore'), ('TempCommentBan', 'TempCommentBan'), ('CommentBan', 'CommentBan')], max_length=20, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='profiles.profile')),
            ],
        ),
        migrations.AddConstraint(
            model_name='commentlike',
            constraint=models.UniqueConstraint(models.F('profile'), models.F('comment'), name='profile-comment'),
        ),
        migrations.AddConstraint(
            model_name='replylike',
            constraint=models.UniqueConstraint(models.F('profile'), models.F('reply'), name='profile-reply'),
        ),
    ]
